// generated by cdk8s
import { ApiObject, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';

/**
 * An Bucket is a managed resource that represents an AWS S3 Bucket.
 *
 * @schema Bucket
 */
export class Bucket extends ApiObject {
  /**
   * Returns the apiVersion and kind for "Bucket"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 's3.aws.crossplane.io/v1beta1',
    kind: 'Bucket',
  }

  /**
   * Renders a Kubernetes manifest for "Bucket".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: BucketProps): any {
    return {
      ...Bucket.GVK,
      ...props,
    };
  }

  /**
   * Defines a "Bucket" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: BucketProps) {
    super(scope, id, Bucket.manifest(props));
  }
}

/**
 * An Bucket is a managed resource that represents an AWS S3 Bucket.
 *
 * @schema Bucket
 */
export interface BucketProps {
  /**
   * @schema Bucket#metadata
   */
  readonly metadata?: any;

  /**
   * BucketSpec represents the desired state of the Bucket.
   *
   * @schema Bucket#spec
   */
  readonly spec: BucketSpec;

}

/**
 * BucketSpec represents the desired state of the Bucket.
 *
 * @schema BucketSpec
 */
export interface BucketSpec {
  /**
   * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
   *
   * @schema BucketSpec#deletionPolicy
   */
  readonly deletionPolicy?: BucketSpecDeletionPolicy;

  /**
   * BucketParameters are parameters for configuring the calls made to AWS Bucket API.
   *
   * @schema BucketSpec#forProvider
   */
  readonly forProvider: BucketSpecForProvider;

  /**
   * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
   *
   * @schema BucketSpec#providerConfigRef
   */
  readonly providerConfigRef?: BucketSpecProviderConfigRef;

  /**
   * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
   *
   * @schema BucketSpec#providerRef
   */
  readonly providerRef?: BucketSpecProviderRef;

  /**
   * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
   *
   * @schema BucketSpec#writeConnectionSecretToRef
   */
  readonly writeConnectionSecretToRef?: BucketSpecWriteConnectionSecretToRef;

}

/**
 * DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either "Delete" or "Orphan" the external resource. The "Delete" policy is the default when no policy is specified.
 *
 * @schema BucketSpecDeletionPolicy
 */
export enum BucketSpecDeletionPolicy {
  /** Orphan */
  ORPHAN = "Orphan",
  /** Delete */
  DELETE = "Delete",
}

/**
 * BucketParameters are parameters for configuring the calls made to AWS Bucket API.
 *
 * @schema BucketSpecForProvider
 */
export interface BucketSpecForProvider {
  /**
   * AccelerateConfiguration configures the transfer acceleration state for an Amazon S3 bucket. For more information, see Amazon S3 Transfer Acceleration (https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProvider#accelerateConfiguration
   */
  readonly accelerateConfiguration?: BucketSpecForProviderAccelerateConfiguration;

  /**
   * The canned ACL to apply to the bucket. Note that either canned ACL or specific access permissions are required. If neither (or both) are provided, the creation of the bucket will fail.
   *
   * @schema BucketSpecForProvider#acl
   */
  readonly acl?: BucketSpecForProviderAcl;

  /**
   * Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing (https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProvider#corsConfiguration
   */
  readonly corsConfiguration?: BucketSpecForProviderCorsConfiguration;

  /**
   * Allows grantee the read, write, read ACP, and write ACP permissions on the bucket.
   *
   * @schema BucketSpecForProvider#grantFullControl
   */
  readonly grantFullControl?: string;

  /**
   * Allows grantee to list the objects in the bucket.
   *
   * @schema BucketSpecForProvider#grantRead
   */
  readonly grantRead?: string;

  /**
   * Allows grantee to read the bucket ACL.
   *
   * @schema BucketSpecForProvider#grantReadAcp
   */
  readonly grantReadAcp?: string;

  /**
   * Allows grantee to create, overwrite, and delete any object in the bucket.
   *
   * @schema BucketSpecForProvider#grantWrite
   */
  readonly grantWrite?: string;

  /**
   * Allows grantee to write the ACL for the applicable bucket.
   *
   * @schema BucketSpecForProvider#grantWriteAcp
   */
  readonly grantWriteAcp?: string;

  /**
   * Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration. For information about lifecycle configuration, see Managing Access Permissions to Your Amazon S3 Resources (https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html).
   *
   * @schema BucketSpecForProvider#lifecycleConfiguration
   */
  readonly lifecycleConfiguration?: BucketSpecForProviderLifecycleConfiguration;

  /**
   * LocationConstraint specifies the Region where the bucket will be created. It is a required field.
   *
   * @schema BucketSpecForProvider#locationConstraint
   */
  readonly locationConstraint: string;

  /**
   * Specifies logging parameters for an Amazon S3 bucket. Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. See the AWS API reference guide for Amazon Simple Storage Service's API operation PutBucketLogging for usage and error information. See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLogging
   *
   * @schema BucketSpecForProvider#loggingConfiguration
   */
  readonly loggingConfiguration?: BucketSpecForProviderLoggingConfiguration;

  /**
   * Enables notifications of specified events for a bucket. For more information about event notifications, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html).
   *
   * @schema BucketSpecForProvider#notificationConfiguration
   */
  readonly notificationConfiguration?: BucketSpecForProviderNotificationConfiguration;

  /**
   * Specifies whether you want S3 Object Lock to be enabled for the new bucket.
   *
   * @schema BucketSpecForProvider#objectLockEnabledForBucket
   */
  readonly objectLockEnabledForBucket?: boolean;

  /**
   * Specifies payer parameters for an Amazon S3 bucket. For more information, see Request Pays buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProvider#paymentConfiguration
   */
  readonly paymentConfiguration?: BucketSpecForProviderPaymentConfiguration;

  /**
   * Creates a replication configuration or replaces an existing one. For more information, see Replication (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the Amazon S3 Developer Guide.
   *
   * @schema BucketSpecForProvider#replicationConfiguration
   */
  readonly replicationConfiguration?: BucketSpecForProviderReplicationConfiguration;

  /**
   * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or customer master keys stored in AWS KMS (SSE-KMS). For information about the Amazon S3 default encryption feature, see Amazon S3 Default Bucket Encryption (https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProvider#serverSideEncryptionConfiguration
   */
  readonly serverSideEncryptionConfiguration?: BucketSpecForProviderServerSideEncryptionConfiguration;

  /**
   * Sets the tags for a bucket. Use tags to organize your AWS bill to reflect your own cost structure. For more information, see Billing and usage reporting for S3 buckets. (https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketBilling.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProvider#tagging
   */
  readonly tagging?: BucketSpecForProviderTagging;

  /**
   * VersioningConfiguration describes the versioning state of an Amazon S3 bucket. See the AWS API reference guide for Amazon Simple Storage Service's API operation PutBucketVersioning for usage and error information. See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketVersioning
   *
   * @schema BucketSpecForProvider#versioningConfiguration
   */
  readonly versioningConfiguration?: BucketSpecForProviderVersioningConfiguration;

  /**
   * Specifies website configuration parameters for an Amazon S3 bucket. See the AWS API reference guide for Amazon Simple Storage Service's API operation PutBucketWebsite for usage and error information. See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketWebsite
   *
   * @schema BucketSpecForProvider#websiteConfiguration
   */
  readonly websiteConfiguration?: BucketSpecForProviderWebsiteConfiguration;

}

/**
 * ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.
 *
 * @schema BucketSpecProviderConfigRef
 */
export interface BucketSpecProviderConfigRef {
  /**
   * Name of the referenced object.
   *
   * @schema BucketSpecProviderConfigRef#name
   */
  readonly name: string;

}

/**
 * ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`
 *
 * @schema BucketSpecProviderRef
 */
export interface BucketSpecProviderRef {
  /**
   * Name of the referenced object.
   *
   * @schema BucketSpecProviderRef#name
   */
  readonly name: string;

}

/**
 * WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.
 *
 * @schema BucketSpecWriteConnectionSecretToRef
 */
export interface BucketSpecWriteConnectionSecretToRef {
  /**
   * Name of the secret.
   *
   * @schema BucketSpecWriteConnectionSecretToRef#name
   */
  readonly name: string;

  /**
   * Namespace of the secret.
   *
   * @schema BucketSpecWriteConnectionSecretToRef#namespace
   */
  readonly namespace: string;

}

/**
 * AccelerateConfiguration configures the transfer acceleration state for an Amazon S3 bucket. For more information, see Amazon S3 Transfer Acceleration (https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderAccelerateConfiguration
 */
export interface BucketSpecForProviderAccelerateConfiguration {
  /**
   * Status specifies the transfer acceleration status of the bucket.
   *
   * @schema BucketSpecForProviderAccelerateConfiguration#status
   */
  readonly status: BucketSpecForProviderAccelerateConfigurationStatus;

}

/**
 * The canned ACL to apply to the bucket. Note that either canned ACL or specific access permissions are required. If neither (or both) are provided, the creation of the bucket will fail.
 *
 * @schema BucketSpecForProviderAcl
 */
export enum BucketSpecForProviderAcl {
  /** private */
  PRIVATE = "private",
  /** public-read */
  PUBLIC_READ = "public-read",
  /** public-read-write */
  PUBLIC_READ_WRITE = "public-read-write",
  /** authenticated-read */
  AUTHENTICATED_READ = "authenticated-read",
}

/**
 * Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see Enabling Cross-Origin Resource Sharing (https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderCorsConfiguration
 */
export interface BucketSpecForProviderCorsConfiguration {
  /**
   * A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.
   *
   * @schema BucketSpecForProviderCorsConfiguration#corsRules
   */
  readonly corsRules: BucketSpecForProviderCorsConfigurationCorsRules[];

}

/**
 * Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration. For information about lifecycle configuration, see Managing Access Permissions to Your Amazon S3 Resources (https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html).
 *
 * @schema BucketSpecForProviderLifecycleConfiguration
 */
export interface BucketSpecForProviderLifecycleConfiguration {
  /**
   * A lifecycle rule for individual objects in an Amazon S3 bucket. 
 Rules is a required field
   *
   * @schema BucketSpecForProviderLifecycleConfiguration#rules
   */
  readonly rules: BucketSpecForProviderLifecycleConfigurationRules[];

}

/**
 * Specifies logging parameters for an Amazon S3 bucket. Set the logging parameters for a bucket and to specify permissions for who can view and modify the logging parameters. See the AWS API reference guide for Amazon Simple Storage Service's API operation PutBucketLogging for usage and error information. See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketLogging
 *
 * @schema BucketSpecForProviderLoggingConfiguration
 */
export interface BucketSpecForProviderLoggingConfiguration {
  /**
   * TargetBucket where logs will be stored, it can be the same bucket. At least one of targetBucket, targetBucketRef or targetBucketSelector is required.
   *
   * @schema BucketSpecForProviderLoggingConfiguration#targetBucket
   */
  readonly targetBucket?: string;

  /**
   * TargetBucketRef references an S3Bucket to retrieve its name
   *
   * @schema BucketSpecForProviderLoggingConfiguration#targetBucketRef
   */
  readonly targetBucketRef?: BucketSpecForProviderLoggingConfigurationTargetBucketRef;

  /**
   * TargetBucketSelector selects a reference to an S3Bucket to retrieve its name
   *
   * @schema BucketSpecForProviderLoggingConfiguration#targetBucketSelector
   */
  readonly targetBucketSelector?: BucketSpecForProviderLoggingConfigurationTargetBucketSelector;

  /**
   * Container for granting information.
   *
   * @schema BucketSpecForProviderLoggingConfiguration#targetGrants
   */
  readonly targetGrants?: BucketSpecForProviderLoggingConfigurationTargetGrants[];

  /**
   * A prefix for all log object keys.
   *
   * @schema BucketSpecForProviderLoggingConfiguration#targetPrefix
   */
  readonly targetPrefix: string;

}

/**
 * Enables notifications of specified events for a bucket. For more information about event notifications, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html).
 *
 * @schema BucketSpecForProviderNotificationConfiguration
 */
export interface BucketSpecForProviderNotificationConfiguration {
  /**
   * Describes the AWS Lambda functions to invoke and the events for which to invoke them.
   *
   * @schema BucketSpecForProviderNotificationConfiguration#lambdaFunctionConfigurations
   */
  readonly lambdaFunctionConfigurations?: BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurations[];

  /**
   * The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.
   *
   * @schema BucketSpecForProviderNotificationConfiguration#queueConfigurations
   */
  readonly queueConfigurations?: BucketSpecForProviderNotificationConfigurationQueueConfigurations[];

  /**
   * The topic to which notifications are sent and the events for which notifications are generated.
   *
   * @schema BucketSpecForProviderNotificationConfiguration#topicConfigurations
   */
  readonly topicConfigurations?: BucketSpecForProviderNotificationConfigurationTopicConfigurations[];

}

/**
 * Specifies payer parameters for an Amazon S3 bucket. For more information, see Request Pays buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderPaymentConfiguration
 */
export interface BucketSpecForProviderPaymentConfiguration {
  /**
   * Payer is a required field, detailing who pays Valid values are "Requester" and "BucketOwner"
   *
   * @schema BucketSpecForProviderPaymentConfiguration#payer
   */
  readonly payer: BucketSpecForProviderPaymentConfigurationPayer;

}

/**
 * Creates a replication configuration or replaces an existing one. For more information, see Replication (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the Amazon S3 Developer Guide.
 *
 * @schema BucketSpecForProviderReplicationConfiguration
 */
export interface BucketSpecForProviderReplicationConfiguration {
  /**
   * The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects. For more information, see How to Set Up Replication (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html) in the Amazon Simple Storage Service Developer Guide. 
 At least one of role, roleRef or roleSelector fields is required.
   *
   * @schema BucketSpecForProviderReplicationConfiguration#role
   */
  readonly role?: string;

  /**
   * RoleRef references an IAMRole to retrieve its Name
   *
   * @schema BucketSpecForProviderReplicationConfiguration#roleRef
   */
  readonly roleRef?: BucketSpecForProviderReplicationConfigurationRoleRef;

  /**
   * RoleSelector selects a reference to an IAMRole to retrieve its Name
   *
   * @schema BucketSpecForProviderReplicationConfiguration#roleSelector
   */
  readonly roleSelector?: BucketSpecForProviderReplicationConfigurationRoleSelector;

  /**
   * A container for one or more replication rules. A replication configuration must have at least one rule and can contain a maximum of 1,000 rules. 
 Rules is a required field
   *
   * @schema BucketSpecForProviderReplicationConfiguration#rules
   */
  readonly rules: BucketSpecForProviderReplicationConfigurationRules[];

}

/**
 * Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3) or customer master keys stored in AWS KMS (SSE-KMS). For information about the Amazon S3 default encryption feature, see Amazon S3 Default Bucket Encryption (https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderServerSideEncryptionConfiguration
 */
export interface BucketSpecForProviderServerSideEncryptionConfiguration {
  /**
   * Container for information about a particular server-side encryption configuration rule.
   *
   * @schema BucketSpecForProviderServerSideEncryptionConfiguration#rules
   */
  readonly rules: BucketSpecForProviderServerSideEncryptionConfigurationRules[];

}

/**
 * Sets the tags for a bucket. Use tags to organize your AWS bill to reflect your own cost structure. For more information, see Billing and usage reporting for S3 buckets. (https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketBilling.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderTagging
 */
export interface BucketSpecForProviderTagging {
  /**
   * A collection for a set of tags TagSet is a required field
   *
   * @schema BucketSpecForProviderTagging#tagSet
   */
  readonly tagSet: BucketSpecForProviderTaggingTagSet[];

}

/**
 * VersioningConfiguration describes the versioning state of an Amazon S3 bucket. See the AWS API reference guide for Amazon Simple Storage Service's API operation PutBucketVersioning for usage and error information. See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketVersioning
 *
 * @schema BucketSpecForProviderVersioningConfiguration
 */
export interface BucketSpecForProviderVersioningConfiguration {
  /**
   * MFADelete specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.
   *
   * @schema BucketSpecForProviderVersioningConfiguration#mfaDelete
   */
  readonly mfaDelete?: BucketSpecForProviderVersioningConfigurationMfaDelete;

  /**
   * Status is the desired versioning state of the bucket.
   *
   * @schema BucketSpecForProviderVersioningConfiguration#status
   */
  readonly status?: BucketSpecForProviderVersioningConfigurationStatus;

}

/**
 * Specifies website configuration parameters for an Amazon S3 bucket. See the AWS API reference guide for Amazon Simple Storage Service's API operation PutBucketWebsite for usage and error information. See also, https://docs.aws.amazon.com/goto/WebAPI/s3-2006-03-01/PutBucketWebsite
 *
 * @schema BucketSpecForProviderWebsiteConfiguration
 */
export interface BucketSpecForProviderWebsiteConfiguration {
  /**
   * The name of the error document for the website.
   *
   * @schema BucketSpecForProviderWebsiteConfiguration#errorDocument
   */
  readonly errorDocument?: BucketSpecForProviderWebsiteConfigurationErrorDocument;

  /**
   * The name of the index document for the website.
   *
   * @schema BucketSpecForProviderWebsiteConfiguration#indexDocument
   */
  readonly indexDocument?: BucketSpecForProviderWebsiteConfigurationIndexDocument;

  /**
   * The redirect behavior for every request to this bucket's website endpoint. If you specify this property, you can't specify any other property.
   *
   * @schema BucketSpecForProviderWebsiteConfiguration#redirectAllRequestsTo
   */
  readonly redirectAllRequestsTo?: BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsTo;

  /**
   * Rules that define when a redirect is applied and the redirect behavior.
   *
   * @schema BucketSpecForProviderWebsiteConfiguration#routingRules
   */
  readonly routingRules?: BucketSpecForProviderWebsiteConfigurationRoutingRules[];

}

/**
 * Status specifies the transfer acceleration status of the bucket.
 *
 * @schema BucketSpecForProviderAccelerateConfigurationStatus
 */
export enum BucketSpecForProviderAccelerateConfigurationStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Suspended */
  SUSPENDED = "Suspended",
}

/**
 * CORSRule specifies a cross-origin access rule for an Amazon S3 bucket.
 *
 * @schema BucketSpecForProviderCorsConfigurationCorsRules
 */
export interface BucketSpecForProviderCorsConfigurationCorsRules {
  /**
   * Headers that are specified in the Access-Control-Request-Headers header. These headers are allowed in a preflight OPTIONS request. In response to any preflight OPTIONS request, Amazon S3 returns any requested headers that are allowed.
   *
   * @schema BucketSpecForProviderCorsConfigurationCorsRules#allowedHeaders
   */
  readonly allowedHeaders?: string[];

  /**
   * An HTTP method that you allow the origin to execute. Valid values are GET, PUT, HEAD, POST, and DELETE.
   *
   * @schema BucketSpecForProviderCorsConfigurationCorsRules#allowedMethods
   */
  readonly allowedMethods: string[];

  /**
   * One or more origins you want customers to be able to access the bucket from.
   *
   * @schema BucketSpecForProviderCorsConfigurationCorsRules#allowedOrigins
   */
  readonly allowedOrigins: string[];

  /**
   * One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).
   *
   * @schema BucketSpecForProviderCorsConfigurationCorsRules#exposeHeaders
   */
  readonly exposeHeaders?: string[];

  /**
   * The time in seconds that your browser is to cache the preflight response for the specified resource.
   *
   * @schema BucketSpecForProviderCorsConfigurationCorsRules#maxAgeSeconds
   */
  readonly maxAgeSeconds?: number;

}

/**
 * LifecycleRule for individual objects in an Amazon S3 bucket.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRules
 */
export interface BucketSpecForProviderLifecycleConfigurationRules {
  /**
   * Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy (https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#abortIncompleteMultipartUpload
   */
  readonly abortIncompleteMultipartUpload?: BucketSpecForProviderLifecycleConfigurationRulesAbortIncompleteMultipartUpload;

  /**
   * Specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#expiration
   */
  readonly expiration?: BucketSpecForProviderLifecycleConfigurationRulesExpiration;

  /**
   * The Filter is used to identify objects that a Lifecycle Rule applies to. A Filter must have exactly one of Prefix, Tag, or And specified.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#filter
   */
  readonly filter?: BucketSpecForProviderLifecycleConfigurationRulesFilter;

  /**
   * Unique identifier for the rule. The value cannot be longer than 255 characters.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#id
   */
  readonly id?: string;

  /**
   * Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object's lifetime.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#noncurrentVersionExpiration
   */
  readonly noncurrentVersionExpiration?: BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionExpiration;

  /**
   * Specifies the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to a specific storage class at a set period in the object's lifetime.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#noncurrentVersionTransitions
   */
  readonly noncurrentVersionTransitions?: BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitions[];

  /**
   * If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied. 
 Status is a required field, valid values are Enabled or Disabled
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#status
   */
  readonly status: BucketSpecForProviderLifecycleConfigurationRulesStatus;

  /**
   * Specifies when an Amazon S3 object transitions to a specified storage class.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRules#transitions
   */
  readonly transitions?: BucketSpecForProviderLifecycleConfigurationRulesTransitions[];

}

/**
 * TargetBucketRef references an S3Bucket to retrieve its name
 *
 * @schema BucketSpecForProviderLoggingConfigurationTargetBucketRef
 */
export interface BucketSpecForProviderLoggingConfigurationTargetBucketRef {
  /**
   * Name of the referenced object.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetBucketRef#name
   */
  readonly name: string;

}

/**
 * TargetBucketSelector selects a reference to an S3Bucket to retrieve its name
 *
 * @schema BucketSpecForProviderLoggingConfigurationTargetBucketSelector
 */
export interface BucketSpecForProviderLoggingConfigurationTargetBucketSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetBucketSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetBucketSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * TargetGrant is the container for granting information.
 *
 * @schema BucketSpecForProviderLoggingConfigurationTargetGrants
 */
export interface BucketSpecForProviderLoggingConfigurationTargetGrants {
  /**
   * Logging permissions assigned to the Grantee for the bucket. Valid values are "FULL_CONTROL", "READ", "WRITE"
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetGrants#bucketLogsPermission
   */
  readonly bucketLogsPermission: BucketSpecForProviderLoggingConfigurationTargetGrantsBucketLogsPermission;

  /**
   * Container for the person being granted permissions.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetGrants#targetGrantee
   */
  readonly targetGrantee: BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee;

}

/**
 * LambdaFunctionConfiguration contains the configuration for AWS Lambda notifications.
 *
 * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurations
 */
export interface BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurations {
  /**
   * An optional unique identifier for configurations in a notification configuration. If you don't provide one, Amazon S3 will assign an ID.
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurations#ID
   */
  readonly id?: string;

  /**
   * The Amazon S3 bucket event for which to invoke the AWS Lambda function. For more information, see Supported Event Types (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. 
 Events is a required field A full list of valid events can be found in the Amazon S3 Developer guide https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurations#events
   */
  readonly events: string[];

  /**
   * Specifies object key name filtering rules. For information about key name filtering, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurations#filter
   */
  readonly filter?: BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilter;

  /**
   * The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs. 
 LambdaFunctionArn is a required field
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurations#lambdaFunctionArn
   */
  readonly lambdaFunctionArn: string;

}

/**
 * QueueConfiguration specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
 *
 * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurations
 */
export interface BucketSpecForProviderNotificationConfigurationQueueConfigurations {
  /**
   * An optional unique identifier for configurations in a notification configuration. If you don't provide one, Amazon S3 will assign an ID.
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurations#ID
   */
  readonly id?: string;

  /**
   * A collection of bucket events for which to send notifications 
 Events is a required field A full list of valid events can be found in the Amazon S3 Developer guide https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurations#events
   */
  readonly events: string[];

  /**
   * Specifies object key name filtering rules. For information about key name filtering, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurations#filter
   */
  readonly filter?: BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilter;

  /**
   * The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type. 
 QueueArn is a required field
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurations#queueArn
   */
  readonly queueArn: string;

}

/**
 * TopicConfiguration specifies the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
 *
 * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurations
 */
export interface BucketSpecForProviderNotificationConfigurationTopicConfigurations {
  /**
   * An optional unique identifier for configurations in a notification configuration. If you don't provide one, Amazon S3 will assign an ID.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurations#ID
   */
  readonly id?: string;

  /**
   * The Amazon S3 bucket event about which to send notifications. For more information, see Supported Event Types (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. 
 Events is a required field A full list of valid events can be found in the Amazon S3 Developer guide https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurations#events
   */
  readonly events: string[];

  /**
   * Specifies object key name filtering rules. For information about key name filtering, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurations#filter
   */
  readonly filter?: BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilter;

  /**
   * The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type. At least one of topicArn, topicArnRef or topicSelector is required.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurations#topicArn
   */
  readonly topicArn?: string;

  /**
   * TopicArnRef references an SNS Topic to retrieve its Arn
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurations#topicRef
   */
  readonly topicRef?: BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicRef;

  /**
   * TopicArnSelector selects a reference to an SNS Topic to retrieve its Arn
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurations#topicSelector
   */
  readonly topicSelector?: BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicSelector;

}

/**
 * Payer is a required field, detailing who pays Valid values are "Requester" and "BucketOwner"
 *
 * @schema BucketSpecForProviderPaymentConfigurationPayer
 */
export enum BucketSpecForProviderPaymentConfigurationPayer {
  /** Requester */
  REQUESTER = "Requester",
  /** BucketOwner */
  BUCKET_OWNER = "BucketOwner",
}

/**
 * RoleRef references an IAMRole to retrieve its Name
 *
 * @schema BucketSpecForProviderReplicationConfigurationRoleRef
 */
export interface BucketSpecForProviderReplicationConfigurationRoleRef {
  /**
   * Name of the referenced object.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRoleRef#name
   */
  readonly name: string;

}

/**
 * RoleSelector selects a reference to an IAMRole to retrieve its Name
 *
 * @schema BucketSpecForProviderReplicationConfigurationRoleSelector
 */
export interface BucketSpecForProviderReplicationConfigurationRoleSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRoleSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRoleSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * ReplicationRule specifies which Amazon S3 objects to replicate and where to store the replicas.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRules
 */
export interface BucketSpecForProviderReplicationConfigurationRules {
  /**
   * Specifies whether Amazon S3 replicates the delete markers. If you specify a Filter, you must specify this element. However, in the latest version of replication configuration (when Filter is specified), Amazon S3 doesn't replicate delete markers. Therefore, the DeleteMarkerReplication element can contain only <Status>Disabled</Status>. For an example configuration, see Basic Rule Configuration (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config). 
 If you don't specify the Filter element, Amazon S3 assumes that the replication configuration is the earlier version, V1. In the earlier version, Amazon S3 handled replication of delete markers differently. For more information, see Backward Compatibility (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#deleteMarkerReplication
   */
  readonly deleteMarkerReplication?: BucketSpecForProviderReplicationConfigurationRulesDeleteMarkerReplication;

  /**
   * A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC). 
 Destination is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#destination
   */
  readonly destination: BucketSpecForProviderReplicationConfigurationRulesDestination;

  /**
   * Optional configuration to replicate existing source bucket objects. For more information, see Replicating Existing Objects (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication) in the Amazon S3 Developer Guide.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#existingObjectReplication
   */
  readonly existingObjectReplication?: BucketSpecForProviderReplicationConfigurationRulesExistingObjectReplication;

  /**
   * A filter that identifies the subset of objects to which the replication rule applies. A Filter must specify exactly one Prefix, Tag, or an And child element.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#filter
   */
  readonly filter?: BucketSpecForProviderReplicationConfigurationRulesFilter;

  /**
   * A unique identifier for the rule. The maximum value is 255 characters.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#id
   */
  readonly id?: string;

  /**
   * The priority associated with the rule. If you specify multiple rules in a replication configuration, Amazon S3 prioritizes the rules to prevent conflicts when filtering. If two or more rules identify the same object based on a specified filter, the rule with higher priority takes precedence. For example: 
    * Same object quality prefix-based filter criteria if prefixes you specified    in multiple rules overlap 
    * Same object qualify tag-based filter criteria specified in multiple    rules 
 For more information, see Replication (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#priority
   */
  readonly priority?: number;

  /**
   * A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using a customer master key (CMK) stored in AWS Key Management Service (SSE-KMS).
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#sourceSelectionCriteria
   */
  readonly sourceSelectionCriteria?: BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteria;

  /**
   * Specifies whether the rule is enabled. 
 Status is a required field Valid values are "Enabled" or "Disabled"
   *
   * @schema BucketSpecForProviderReplicationConfigurationRules#status
   */
  readonly status: BucketSpecForProviderReplicationConfigurationRulesStatus;

}

/**
 * ServerSideEncryptionRule Specifies the default server-side encryption configuration.
 *
 * @schema BucketSpecForProviderServerSideEncryptionConfigurationRules
 */
export interface BucketSpecForProviderServerSideEncryptionConfigurationRules {
  /**
   * Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
   *
   * @schema BucketSpecForProviderServerSideEncryptionConfigurationRules#applyServerSideEncryptionByDefault
   */
  readonly applyServerSideEncryptionByDefault: BucketSpecForProviderServerSideEncryptionConfigurationRulesApplyServerSideEncryptionByDefault;

}

/**
 * Tag is a container for a key value name pair.
 *
 * @schema BucketSpecForProviderTaggingTagSet
 */
export interface BucketSpecForProviderTaggingTagSet {
  /**
   * Name of the tag. Key is a required field
   *
   * @schema BucketSpecForProviderTaggingTagSet#key
   */
  readonly key: string;

  /**
   * Value of the tag. Value is a required field
   *
   * @schema BucketSpecForProviderTaggingTagSet#value
   */
  readonly value: string;

}

/**
 * MFADelete specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.
 *
 * @schema BucketSpecForProviderVersioningConfigurationMfaDelete
 */
export enum BucketSpecForProviderVersioningConfigurationMfaDelete {
  /** Enabled */
  ENABLED = "Enabled",
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * Status is the desired versioning state of the bucket.
 *
 * @schema BucketSpecForProviderVersioningConfigurationStatus
 */
export enum BucketSpecForProviderVersioningConfigurationStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Suspended */
  SUSPENDED = "Suspended",
}

/**
 * The name of the error document for the website.
 *
 * @schema BucketSpecForProviderWebsiteConfigurationErrorDocument
 */
export interface BucketSpecForProviderWebsiteConfigurationErrorDocument {
  /**
   * The object key name to use when a 4XX class error occurs.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationErrorDocument#key
   */
  readonly key: string;

}

/**
 * The name of the index document for the website.
 *
 * @schema BucketSpecForProviderWebsiteConfigurationIndexDocument
 */
export interface BucketSpecForProviderWebsiteConfigurationIndexDocument {
  /**
   * A suffix that is appended to a request that is for a directory on the website endpoint (for example,if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationIndexDocument#suffix
   */
  readonly suffix: string;

}

/**
 * The redirect behavior for every request to this bucket's website endpoint. If you specify this property, you can't specify any other property.
 *
 * @schema BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsTo
 */
export interface BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsTo {
  /**
   * Name of the host where requests are redirected.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsTo#hostName
   */
  readonly hostName: string;

  /**
   * Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsTo#protocol
   */
  readonly protocol: BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsToProtocol;

}

/**
 * RoutingRule specifies the redirect behavior and when a redirect is applied.
 *
 * @schema BucketSpecForProviderWebsiteConfigurationRoutingRules
 */
export interface BucketSpecForProviderWebsiteConfigurationRoutingRules {
  /**
   * A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRules#condition
   */
  readonly condition?: BucketSpecForProviderWebsiteConfigurationRoutingRulesCondition;

  /**
   * Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRules#redirect
   */
  readonly redirect: BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect;

}

/**
 * Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy (https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesAbortIncompleteMultipartUpload
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesAbortIncompleteMultipartUpload {
  /**
   * Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesAbortIncompleteMultipartUpload#daysAfterInitiation
   */
  readonly daysAfterInitiation: number;

}

/**
 * Specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesExpiration
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesExpiration {
  /**
   * Indicates at what date the object is to be moved or deleted.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesExpiration#date
   */
  readonly date?: Date;

  /**
   * Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesExpiration#days
   */
  readonly days?: number;

  /**
   * Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set to true, the delete marker will be expired; if set to false the policy takes no action. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesExpiration#expiredObjectDeleteMarker
   */
  readonly expiredObjectDeleteMarker?: boolean;

}

/**
 * The Filter is used to identify objects that a Lifecycle Rule applies to. A Filter must have exactly one of Prefix, Tag, or And specified.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesFilter
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesFilter {
  /**
   * This is used in a Lifecycle Rule Filter to apply a logical AND to two or more predicates. The Lifecycle Rule will apply to any object matching all of the predicates configured inside the And operator.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilter#and
   */
  readonly and?: BucketSpecForProviderLifecycleConfigurationRulesFilterAnd;

  /**
   * Prefix identifying one or more objects to which the rule applies.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilter#prefix
   */
  readonly prefix?: string;

  /**
   * This tag must exist in the object's tag set in order for the rule to apply.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilter#tag
   */
  readonly tag?: BucketSpecForProviderLifecycleConfigurationRulesFilterTag;

}

/**
 * Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object's lifetime.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionExpiration
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionExpiration {
  /**
   * Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see How Amazon S3 Calculates When an Object Became Noncurrent (https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionExpiration#noncurrentDays
   */
  readonly noncurrentDays?: number;

}

/**
 * NoncurrentVersionTransition contains the transition rule that describes when noncurrent objects transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER, or DEEP_ARCHIVE storage class at a specific period in the object's lifetime.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitions
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitions {
  /**
   * Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see How Amazon S3 Calculates How Long an Object Has Been Noncurrent (https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitions#noncurrentDays
   */
  readonly noncurrentDays?: number;

  /**
   * The class of storage used to store the object. Valid values are: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitions#storageClass
   */
  readonly storageClass: BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitionsStorageClass;

}

/**
 * If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied. 
 Status is a required field, valid values are Enabled or Disabled
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesStatus
 */
export enum BucketSpecForProviderLifecycleConfigurationRulesStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * Transition specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see Transitioning Objects Using Amazon S3 Lifecycle (https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesTransitions
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesTransitions {
  /**
   * Indicates when objects are transitioned to the specified storage class. The date value must be in ISO 8601 format. The time is always midnight UTC.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesTransitions#date
   */
  readonly date?: Date;

  /**
   * Indicates the number of days after creation when objects are transitioned to the specified storage class. The value must be a positive integer.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesTransitions#days
   */
  readonly days?: number;

  /**
   * The storage class to which you want the object to transition. Valid values are: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesTransitions#storageClass
   */
  readonly storageClass: BucketSpecForProviderLifecycleConfigurationRulesTransitionsStorageClass;

}

/**
 * Logging permissions assigned to the Grantee for the bucket. Valid values are "FULL_CONTROL", "READ", "WRITE"
 *
 * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsBucketLogsPermission
 */
export enum BucketSpecForProviderLoggingConfigurationTargetGrantsBucketLogsPermission {
  /** FULL_CONTROL */
  FULL_CONTROL = "FULL_CONTROL",
  /** READ */
  READ = "READ",
  /** WRITE */
  WRITE = "WRITE",
}

/**
 * Container for the person being granted permissions.
 *
 * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee
 */
export interface BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee {
  /**
   * The canonical user ID of the grantee.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee#ID
   */
  readonly id?: string;

  /**
   * URI of the grantee group.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee#URI
   */
  readonly uri?: string;

  /**
   * Screen name of the grantee.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee#displayName
   */
  readonly displayName?: string;

  /**
   * Email address of the grantee. For a list of all the Amazon S3 supported Regions and endpoints, see Regions and Endpoints (https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) in the AWS General Reference.
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee#emailAddress
   */
  readonly emailAddress?: string;

  /**
   * Type of grantee Type is a required field
   *
   * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGrantee#type
   */
  readonly type: BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGranteeType;

}

/**
 * Specifies object key name filtering rules. For information about key name filtering, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilter
 */
export interface BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilter {
  /**
   * A container for object key name prefix and suffix filtering rules.
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilter#key
   */
  readonly key?: BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKey;

}

/**
 * Specifies object key name filtering rules. For information about key name filtering, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilter
 */
export interface BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilter {
  /**
   * A container for object key name prefix and suffix filtering rules.
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilter#key
   */
  readonly key?: BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKey;

}

/**
 * Specifies object key name filtering rules. For information about key name filtering, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide.
 *
 * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilter
 */
export interface BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilter {
  /**
   * A container for object key name prefix and suffix filtering rules.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilter#key
   */
  readonly key?: BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKey;

}

/**
 * TopicArnRef references an SNS Topic to retrieve its Arn
 *
 * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicRef
 */
export interface BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicRef {
  /**
   * Name of the referenced object.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicRef#name
   */
  readonly name: string;

}

/**
 * TopicArnSelector selects a reference to an SNS Topic to retrieve its Arn
 *
 * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicSelector
 */
export interface BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsTopicSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Specifies whether Amazon S3 replicates the delete markers. If you specify a Filter, you must specify this element. However, in the latest version of replication configuration (when Filter is specified), Amazon S3 doesn't replicate delete markers. Therefore, the DeleteMarkerReplication element can contain only <Status>Disabled</Status>. For an example configuration, see Basic Rule Configuration (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config). 
 If you don't specify the Filter element, Amazon S3 assumes that the replication configuration is the earlier version, V1. In the earlier version, Amazon S3 handled replication of delete markers differently. For more information, see Backward Compatibility (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDeleteMarkerReplication
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDeleteMarkerReplication {
  /**
   * Indicates whether to replicate delete markers. In the current implementation, Amazon S3 doesn't replicate the delete markers. The status must be "Disabled".
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDeleteMarkerReplication#Status
   */
  readonly status?: BucketSpecForProviderReplicationConfigurationRulesDeleteMarkerReplicationStatus;

}

/**
 * A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC). 
 Destination is a required field
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestination
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestination {
  /**
   * Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#accessControlTranslation
   */
  readonly accessControlTranslation?: BucketSpecForProviderReplicationConfigurationRulesDestinationAccessControlTranslation;

  /**
   * Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to change replica ownership to the AWS account that owns the destination bucket by specifying the AccessControlTranslation property, this is the account ID of the destination bucket owner. For more information, see Replication Additional Configuration: Changing the Replica Owner (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-change-owner.html) in the Amazon Simple Storage Service Developer Guide.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#account
   */
  readonly account?: string;

  /**
   * The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the results. At least one of bucket, bucketRef or bucketSelector is required.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#bucket
   */
  readonly bucket?: string;

  /**
   * BucketRef references a Bucket to retrieve its Name
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#bucketRef
   */
  readonly bucketRef?: BucketSpecForProviderReplicationConfigurationRulesDestinationBucketRef;

  /**
   * BucketSelector selects a reference to a Bucket to retrieve its Name
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#bucketSelector
   */
  readonly bucketSelector?: BucketSpecForProviderReplicationConfigurationRulesDestinationBucketSelector;

  /**
   * A container that provides information about encryption. If SourceSelectionCriteria is specified, you must specify this element.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#encryptionConfiguration
   */
  readonly encryptionConfiguration?: BucketSpecForProviderReplicationConfigurationRulesDestinationEncryptionConfiguration;

  /**
   * A container specifying replication metrics-related settings enabling metrics and Amazon S3 events for S3 Replication Time Control (S3 RTC). Must be specified together with a ReplicationTime block.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#metrics
   */
  readonly metrics?: BucketSpecForProviderReplicationConfigurationRulesDestinationMetrics;

  /**
   * A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a Metrics block.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#replicationTime
   */
  readonly replicationTime?: BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTime;

  /**
   * The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. For valid values, see the StorageClass element of the PUT Bucket replication (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the Amazon Simple Storage Service API Reference.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestination#storageClass
   */
  readonly storageClass?: BucketSpecForProviderReplicationConfigurationRulesDestinationStorageClass;

}

/**
 * Optional configuration to replicate existing source bucket objects. For more information, see Replicating Existing Objects (https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication) in the Amazon S3 Developer Guide.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesExistingObjectReplication
 */
export interface BucketSpecForProviderReplicationConfigurationRulesExistingObjectReplication {
  /**
   * Status is a required field Valid values are "Enabled" and "Disabled"
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesExistingObjectReplication#status
   */
  readonly status: BucketSpecForProviderReplicationConfigurationRulesExistingObjectReplicationStatus;

}

/**
 * A filter that identifies the subset of objects to which the replication rule applies. A Filter must specify exactly one Prefix, Tag, or an And child element.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesFilter
 */
export interface BucketSpecForProviderReplicationConfigurationRulesFilter {
  /**
   * A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example: 
    * If you specify both a Prefix and a Tag filter, wrap these filters in    an And tag. 
    * If you specify a filter based on multiple tags, wrap the Tag elements    in an And tag.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilter#and
   */
  readonly and?: BucketSpecForProviderReplicationConfigurationRulesFilterAnd;

  /**
   * An object key name prefix that identifies the subset of objects to which the rule applies.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilter#prefix
   */
  readonly prefix?: string;

  /**
   * A container for specifying a tag key and value. The rule applies only to objects that have the tag in their tag set.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilter#tag
   */
  readonly tag?: BucketSpecForProviderReplicationConfigurationRulesFilterTag;

}

/**
 * A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects. Currently, Amazon S3 supports only the filter that you can specify for objects created with server-side encryption using a customer master key (CMK) stored in AWS Key Management Service (SSE-KMS).
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteria
 */
export interface BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteria {
  /**
   * A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. If you include SourceSelectionCriteria in the replication configuration, this element is required.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteria#sseKmsEncryptedObjects
   */
  readonly sseKmsEncryptedObjects: BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects;

}

/**
 * Specifies whether the rule is enabled. 
 Status is a required field Valid values are "Enabled" or "Disabled"
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesStatus
 */
export enum BucketSpecForProviderReplicationConfigurationRulesStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
 *
 * @schema BucketSpecForProviderServerSideEncryptionConfigurationRulesApplyServerSideEncryptionByDefault
 */
export interface BucketSpecForProviderServerSideEncryptionConfigurationRulesApplyServerSideEncryptionByDefault {
  /**
   * AWS Key Management Service (KMS) customer master key ID to use for the default encryption. This parameter is allowed if and only if SSEAlgorithm is set to aws:kms. 
 You can specify the key ID or the Amazon Resource Name (ARN) of the CMK. However, if you are using encryption with cross-account operations, you must use a fully qualified CMK ARN. For more information, see Using encryption for cross-account operations (https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy). 
 For example: 
    * Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab 
    * Key ARN: arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab 
 Amazon S3 only supports symmetric CMKs and not asymmetric CMKs. For more information, see Using Symmetric and Asymmetric Keys (https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html) in the AWS Key Management Service Developer Guide.
   *
   * @schema BucketSpecForProviderServerSideEncryptionConfigurationRulesApplyServerSideEncryptionByDefault#kmsMasterKeyId
   */
  readonly kmsMasterKeyId?: string;

  /**
   * Server-side encryption algorithm to use for the default encryption. Options are AES256 or aws:kms
   *
   * @schema BucketSpecForProviderServerSideEncryptionConfigurationRulesApplyServerSideEncryptionByDefault#sseAlgorithm
   */
  readonly sseAlgorithm: string;

}

/**
 * Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
 *
 * @schema BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsToProtocol
 */
export enum BucketSpecForProviderWebsiteConfigurationRedirectAllRequestsToProtocol {
  /** http */
  HTTP = "http",
  /** https */
  HTTPS = "https",
}

/**
 * A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
 *
 * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesCondition
 */
export interface BucketSpecForProviderWebsiteConfigurationRoutingRulesCondition {
  /**
   * The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesCondition#httpErrorCodeReturnedEquals
   */
  readonly httpErrorCodeReturnedEquals?: string;

  /**
   * The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesCondition#keyPrefixEquals
   */
  readonly keyPrefixEquals?: string;

}

/**
 * Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.
 *
 * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect
 */
export interface BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect {
  /**
   * The HTTP redirect code to use on the response. Not required if one of the siblings is present.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect#httpRedirectCode
   */
  readonly httpRedirectCode?: string;

  /**
   * The host name to use in the redirect request.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect#keyPrefixEquals
   */
  readonly keyPrefixEquals?: string;

  /**
   * Protocol to use when redirecting requests. The default is the protocol that is used in the original request.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect#protocol
   */
  readonly protocol: string;

  /**
   * The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect#replaceKeyPrefixWith
   */
  readonly replaceKeyPrefixWith?: string;

  /**
   * The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the siblings is present. Can be present only if ReplaceKeyPrefixWith is not provided.
   *
   * @schema BucketSpecForProviderWebsiteConfigurationRoutingRulesRedirect#replaceKeyWith
   */
  readonly replaceKeyWith?: string;

}

/**
 * This is used in a Lifecycle Rule Filter to apply a logical AND to two or more predicates. The Lifecycle Rule will apply to any object matching all of the predicates configured inside the And operator.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterAnd
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesFilterAnd {
  /**
   * Prefix identifying one or more objects to which the rule applies.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterAnd#prefix
   */
  readonly prefix?: string;

  /**
   * All of these tags must exist in the object's tag set in order for the rule to apply.
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterAnd#tags
   */
  readonly tags: BucketSpecForProviderLifecycleConfigurationRulesFilterAndTags[];

}

/**
 * This tag must exist in the object's tag set in order for the rule to apply.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterTag
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesFilterTag {
  /**
   * Name of the tag. Key is a required field
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterTag#key
   */
  readonly key: string;

  /**
   * Value of the tag. Value is a required field
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterTag#value
   */
  readonly value: string;

}

/**
 * The class of storage used to store the object. Valid values are: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitionsStorageClass
 */
export enum BucketSpecForProviderLifecycleConfigurationRulesNoncurrentVersionTransitionsStorageClass {
  /** GLACIER */
  GLACIER = "GLACIER",
  /** STANDARD_IA */
  STANDARD_IA = "STANDARD_IA",
  /** ONEZONE_IA */
  ONEZONE_IA = "ONEZONE_IA",
  /** INTELLIGENT_TIERING */
  INTELLIGENT_TIERING = "INTELLIGENT_TIERING",
  /** DEEP_ARCHIVE */
  DEEP_ARCHIVE = "DEEP_ARCHIVE",
}

/**
 * The storage class to which you want the object to transition. Valid values are: GLACIER, STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, DEEP_ARCHIVE
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesTransitionsStorageClass
 */
export enum BucketSpecForProviderLifecycleConfigurationRulesTransitionsStorageClass {
  /** GLACIER */
  GLACIER = "GLACIER",
  /** STANDARD_IA */
  STANDARD_IA = "STANDARD_IA",
  /** ONEZONE_IA */
  ONEZONE_IA = "ONEZONE_IA",
  /** INTELLIGENT_TIERING */
  INTELLIGENT_TIERING = "INTELLIGENT_TIERING",
  /** DEEP_ARCHIVE */
  DEEP_ARCHIVE = "DEEP_ARCHIVE",
}

/**
 * Type of grantee Type is a required field
 *
 * @schema BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGranteeType
 */
export enum BucketSpecForProviderLoggingConfigurationTargetGrantsTargetGranteeType {
  /** CanonicalUser */
  CANONICAL_USER = "CanonicalUser",
  /** AmazonCustomerByEmail */
  AMAZON_CUSTOMER_BY_EMAIL = "AmazonCustomerByEmail",
  /** Group */
  GROUP = "Group",
}

/**
 * A container for object key name prefix and suffix filtering rules.
 *
 * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKey
 */
export interface BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKey {
  /**
   * A list of containers for the key-value pair that defines the criteria for the filter rule.
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKey#filterRules
   */
  readonly filterRules: BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRules[];

}

/**
 * A container for object key name prefix and suffix filtering rules.
 *
 * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKey
 */
export interface BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKey {
  /**
   * A list of containers for the key-value pair that defines the criteria for the filter rule.
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKey#filterRules
   */
  readonly filterRules: BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRules[];

}

/**
 * A container for object key name prefix and suffix filtering rules.
 *
 * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKey
 */
export interface BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKey {
  /**
   * A list of containers for the key-value pair that defines the criteria for the filter rule.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKey#filterRules
   */
  readonly filterRules: BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRules[];

}

/**
 * Indicates whether to replicate delete markers. In the current implementation, Amazon S3 doesn't replicate the delete markers. The status must be "Disabled".
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDeleteMarkerReplicationStatus
 */
export enum BucketSpecForProviderReplicationConfigurationRulesDeleteMarkerReplicationStatus {
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationAccessControlTranslation
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationAccessControlTranslation {
  /**
   * Specifies the replica ownership. For default and valid values, see PUT bucket replication (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) in the Amazon Simple Storage Service API Reference. Owner is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationAccessControlTranslation#ownerOverride
   */
  readonly ownerOverride: string;

}

/**
 * BucketRef references a Bucket to retrieve its Name
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationBucketRef
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationBucketRef {
  /**
   * Name of the referenced object.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationBucketRef#name
   */
  readonly name: string;

}

/**
 * BucketSelector selects a reference to a Bucket to retrieve its Name
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationBucketSelector
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationBucketSelector {
  /**
   * MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationBucketSelector#matchControllerRef
   */
  readonly matchControllerRef?: boolean;

  /**
   * MatchLabels ensures an object with matching labels is selected.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationBucketSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * A container that provides information about encryption. If SourceSelectionCriteria is specified, you must specify this element.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationEncryptionConfiguration
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationEncryptionConfiguration {
  /**
   * Specifies the ID (Key ARN or Alias ARN) of the customer managed customer master key (CMK) stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses this key to encrypt replica objects. Amazon S3 only supports symmetric customer managed CMKs. For more information, see Using Symmetric and Asymmetric Keys (https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html) in the AWS Key Management Service Developer Guide.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationEncryptionConfiguration#replicaKmsKeyId
   */
  readonly replicaKmsKeyId: string;

}

/**
 * A container specifying replication metrics-related settings enabling metrics and Amazon S3 events for S3 Replication Time Control (S3 RTC). Must be specified together with a ReplicationTime block.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationMetrics
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationMetrics {
  /**
   * A container specifying the time threshold for emitting the s3:Replication:OperationMissedThreshold event. EventThreshold is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationMetrics#eventThreshold
   */
  readonly eventThreshold: BucketSpecForProviderReplicationConfigurationRulesDestinationMetricsEventThreshold;

  /**
   * Specifies whether the replication metrics are enabled. 
 Status is a required field, valid values are "Enabled" and "Disabled"
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationMetrics#status
   */
  readonly status: BucketSpecForProviderReplicationConfigurationRulesDestinationMetricsStatus;

}

/**
 * A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a Metrics block.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTime
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTime {
  /**
   * Specifies whether the replication time is enabled Status is a required field Valid values are "Enabled" and "Disabled"
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTime#status
   */
  readonly status: BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTimeStatus;

  /**
   * A container specifying the time by which replication should be complete for all objects and operations on objects. Time is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTime#time
   */
  readonly time: BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTimeTime;

}

/**
 * The storage class to use when replicating objects, such as S3 Standard or reduced redundancy. By default, Amazon S3 uses the storage class of the source object to create the object replica. For valid values, see the StorageClass element of the PUT Bucket replication (https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html) action in the Amazon Simple Storage Service API Reference.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationStorageClass
 */
export enum BucketSpecForProviderReplicationConfigurationRulesDestinationStorageClass {
  /** GLACIER */
  GLACIER = "GLACIER",
  /** STANDARD_IA */
  STANDARD_IA = "STANDARD_IA",
  /** ONEZONE_IA */
  ONEZONE_IA = "ONEZONE_IA",
  /** INTELLIGENT_TIERING */
  INTELLIGENT_TIERING = "INTELLIGENT_TIERING",
  /** DEEP_ARCHIVE */
  DEEP_ARCHIVE = "DEEP_ARCHIVE",
}

/**
 * Status is a required field Valid values are "Enabled" and "Disabled"
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesExistingObjectReplicationStatus
 */
export enum BucketSpecForProviderReplicationConfigurationRulesExistingObjectReplicationStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. For example: 
    * If you specify both a Prefix and a Tag filter, wrap these filters in    an And tag. 
    * If you specify a filter based on multiple tags, wrap the Tag elements    in an And tag.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesFilterAnd
 */
export interface BucketSpecForProviderReplicationConfigurationRulesFilterAnd {
  /**
   * An object key name prefix that identifies the subset of objects to which the rule applies.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilterAnd#prefix
   */
  readonly prefix?: string;

  /**
   * An array of tags containing key and value pairs.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilterAnd#tag
   */
  readonly tag?: BucketSpecForProviderReplicationConfigurationRulesFilterAndTag[];

}

/**
 * A container for specifying a tag key and value. The rule applies only to objects that have the tag in their tag set.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesFilterTag
 */
export interface BucketSpecForProviderReplicationConfigurationRulesFilterTag {
  /**
   * Name of the tag. Key is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilterTag#key
   */
  readonly key: string;

  /**
   * Value of the tag. Value is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilterTag#value
   */
  readonly value: string;

}

/**
 * A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS. If you include SourceSelectionCriteria in the replication configuration, this element is required.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects
 */
export interface BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects {
  /**
   * Specifies whether Amazon S3 replicates objects created with server-side encryption using a customer master key (CMK) stored in AWS Key Management Service. 
 Status is a required field Valid values are "Enabled" or "Disabled"
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects#status
   */
  readonly status: BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsStatus;

}

/**
 * Tag is a container for a key value name pair.
 *
 * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterAndTags
 */
export interface BucketSpecForProviderLifecycleConfigurationRulesFilterAndTags {
  /**
   * Name of the tag. Key is a required field
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterAndTags#key
   */
  readonly key: string;

  /**
   * Value of the tag. Value is a required field
   *
   * @schema BucketSpecForProviderLifecycleConfigurationRulesFilterAndTags#value
   */
  readonly value: string;

}

/**
 * FilterRule specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.
 *
 * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRules
 */
export interface BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRules {
  /**
   * The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. Valid values are "prefix" or "suffix"
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRules#name
   */
  readonly name: BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRulesName;

  /**
   * The value that the filter searches for in object key names.
   *
   * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRules#value
   */
  readonly value?: string;

}

/**
 * FilterRule specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.
 *
 * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRules
 */
export interface BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRules {
  /**
   * The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. Valid values are "prefix" or "suffix"
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRules#name
   */
  readonly name: BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRulesName;

  /**
   * The value that the filter searches for in object key names.
   *
   * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRules#value
   */
  readonly value?: string;

}

/**
 * FilterRule specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.
 *
 * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRules
 */
export interface BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRules {
  /**
   * The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. Valid values are "prefix" or "suffix"
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRules#name
   */
  readonly name: BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRulesName;

  /**
   * The value that the filter searches for in object key names.
   *
   * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRules#value
   */
  readonly value?: string;

}

/**
 * A container specifying the time threshold for emitting the s3:Replication:OperationMissedThreshold event. EventThreshold is a required field
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationMetricsEventThreshold
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationMetricsEventThreshold {
  /**
   * Contains an integer specifying time in minutes. 
 Valid values: 15 minutes.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationMetricsEventThreshold#minutes
   */
  readonly minutes: number;

}

/**
 * Specifies whether the replication metrics are enabled. 
 Status is a required field, valid values are "Enabled" and "Disabled"
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationMetricsStatus
 */
export enum BucketSpecForProviderReplicationConfigurationRulesDestinationMetricsStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * Specifies whether the replication time is enabled Status is a required field Valid values are "Enabled" and "Disabled"
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTimeStatus
 */
export enum BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTimeStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * A container specifying the time by which replication should be complete for all objects and operations on objects. Time is a required field
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTimeTime
 */
export interface BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTimeTime {
  /**
   * Contains an integer specifying time in minutes. 
 Valid values: 15 minutes.
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesDestinationReplicationTimeTime#minutes
   */
  readonly minutes: number;

}

/**
 * Tag is a container for a key value name pair.
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesFilterAndTag
 */
export interface BucketSpecForProviderReplicationConfigurationRulesFilterAndTag {
  /**
   * Name of the tag. Key is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilterAndTag#key
   */
  readonly key: string;

  /**
   * Value of the tag. Value is a required field
   *
   * @schema BucketSpecForProviderReplicationConfigurationRulesFilterAndTag#value
   */
  readonly value: string;

}

/**
 * Specifies whether Amazon S3 replicates objects created with server-side encryption using a customer master key (CMK) stored in AWS Key Management Service. 
 Status is a required field Valid values are "Enabled" or "Disabled"
 *
 * @schema BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsStatus
 */
export enum BucketSpecForProviderReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsStatus {
  /** Enabled */
  ENABLED = "Enabled",
  /** Disabled */
  DISABLED = "Disabled",
}

/**
 * The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. Valid values are "prefix" or "suffix"
 *
 * @schema BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRulesName
 */
export enum BucketSpecForProviderNotificationConfigurationLambdaFunctionConfigurationsFilterKeyFilterRulesName {
  /** prefix */
  PREFIX = "prefix",
  /** suffix */
  SUFFIX = "suffix",
}

/**
 * The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. Valid values are "prefix" or "suffix"
 *
 * @schema BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRulesName
 */
export enum BucketSpecForProviderNotificationConfigurationQueueConfigurationsFilterKeyFilterRulesName {
  /** prefix */
  PREFIX = "prefix",
  /** suffix */
  SUFFIX = "suffix",
}

/**
 * The object key name prefix or suffix identifying one or more objects to which the filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and suffixes are not supported. For more information, see Configuring Event Notifications (https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html) in the Amazon Simple Storage Service Developer Guide. Valid values are "prefix" or "suffix"
 *
 * @schema BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRulesName
 */
export enum BucketSpecForProviderNotificationConfigurationTopicConfigurationsFilterKeyFilterRulesName {
  /** prefix */
  PREFIX = "prefix",
  /** suffix */
  SUFFIX = "suffix",
}

